//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
	public:
	int NthRoot(int n, int m)
	{
	   // Binary search
	   int low=1,high=m;
	   
	   while(low<=high)
	   {
	        int mid=low+(high-low)/2;
	       
	        long long int x=1LL;
	        for(int i=1;i<=n;i++)
	        {
	            x*=mid*1LL;
	            if(x>m)
	            {
	                break;
	            }
	        }
	       
	       if(x==m*1LL)     // mid^n==m
	       {
	           return(mid);
	       }
	       else if(x<m*1LL) // mid^n<m
	       {
	           low=mid+1;
	       }
	       else if(x>m*1LL) // mid^n>m
	       {
	            high=mid-1;   
	       }
	   }
	   
	   return(-1); // 'nth' root of 'm' doesnt exist
	}  
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		Solution ob;
		int ans = ob.NthRoot(n, m);
		cout << ans << "\n";
	}  
	return 0;
}
// } Driver Code Ends
